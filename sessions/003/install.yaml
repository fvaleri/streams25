apiVersion: kafka.strimzi.io/v1beta2
kind: KafkaNodePool
metadata:
  name: combined
  labels:
    strimzi.io/cluster: my-cluster
spec:
  replicas: 1
  roles:
    - controller
    - broker
  resources:
    limits:
      cpu: 2000m
      memory: 2Gi
    requests:
      cpu: 1000m
      memory: 2Gi
  storage:
    size: 10Gi
    type: persistent-claim
    deleteClaim: false
---
apiVersion: kafka.strimzi.io/v1beta2
kind: Kafka
metadata:
  name: my-cluster
  annotations:
    # annotation required to enable KafkaNodePools
    strimzi.io/node-pools: enabled
spec:
  kafka:
    # replicas field is is required, but ignored when KafkaNodePools are used
    replicas: 1
    version: 3.5.0
    config:
      inter.broker.protocol.version: "3.5"
      num.partitions: 1
      default.replication.factor: 1
      min.insync.replicas: 1
      offsets.topic.replication.factor: 1
      transaction.state.log.replication.factor: 1
      transaction.state.log.min.isr: 1
    listeners:
      - name: plain
        port: 9092
        type: internal
        tls: false
      - name: tls
        port: 9093
        type: internal
        tls: true
    # storage field is required, but ignored when KafkaNodePools are used
    storage:
      size: 10Gi
      type: persistent-claim
      deleteClaim: false
  # zookeeper field is required, but ignored when running in KRaft mode
  zookeeper:
    replicas: 1
    storage:
      size: 5Gi
      type: persistent-claim
      deleteClaim: false
  entityOperator:
    userOperator: {}
    topicOperator: {}
    template:
      topicOperatorContainer:
        env:
          # disable the use of finalizers to control topic deletion
          - name: STRIMZI_USE_FINALIZERS
            value: "false"
---
apiVersion: kafka.strimzi.io/v1beta2
kind: KafkaTopic
metadata:
  name: my-topic
  labels:
    strimzi.io/cluster: my-cluster
spec:
  partitions: 1
  replicas: 1
  config:
    min.insync.replicas: 1
